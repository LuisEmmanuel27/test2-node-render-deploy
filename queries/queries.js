export const getAllMoviesQ = `
SELECT
  BIN_TO_UUID(M.ID) AS ID,
  M.TITLE,
  M.YEAR,
  M.DIRECTOR,
  M.DURATION,
  M.POSTER,
  M.RATE,
  GROUP_CONCAT(G.NAME ORDER BY G.NAME SEPARATOR ', ') AS GENRES
FROM
  MOVIE M
  LEFT JOIN MOVIE_GENRE MG ON M.ID = MG.MOVIE_ID
  LEFT JOIN GENRE G ON MG.GENRE_ID = G.ID
GROUP BY
  M.ID;
`

export const getMoviesByGenreQ = `
SELECT
  BIN_TO_UUID(M.ID) ID,
  M.TITLE,
  M.YEAR,
  M.DIRECTOR,
  M.DURATION,
  M.POSTER,
  M.RATE,
  (
    SELECT
      GROUP_CONCAT(G.NAME ORDER BY G.NAME SEPARATOR ', ')
    FROM
      GENRE G
      INNER JOIN MOVIE_GENRE MG
      ON G.ID = MG.GENRE_ID
    WHERE
      MG.MOVIE_ID = M.ID
  ) AS GENRES
FROM
  MOVIE M
  INNER JOIN MOVIE_GENRE MG
  ON M.ID = MG.MOVIE_ID
WHERE
  MG.GENRE_ID = ?;
`

export const getGenreByNameQ = 'SELECT * FROM GENRE WHERE LOWER(NAME) = ?;'

export const getMovieByIdQ = `
SELECT
  BIN_TO_UUID(M.ID) AS ID,
  M.TITLE,
  M.YEAR,
  M.DIRECTOR,
  M.DURATION,
  M.POSTER,
  M.RATE,
  GROUP_CONCAT(G.NAME ORDER BY G.NAME SEPARATOR ', ') AS GENRES
FROM
  MOVIE M
  LEFT JOIN MOVIE_GENRE MG ON M.ID = MG.MOVIE_ID
  LEFT JOIN GENRE G ON MG.GENRE_ID = G.ID
WHERE
  M.ID = UUID_TO_BIN(?)
GROUP BY
  M.ID;
`

export const createMovieQ = `
INSERT INTO MOVIE (
  ID,
  TITLE,
  YEAR,
  DIRECTOR,
  DURATION,
  POSTER,
  RATE
) VALUES(
  UUID_TO_BIN(?),
  ?,
  ?,
  ?,
  ?,
  ?,
  ?
);
`

export const deleteMovieQ = `
DELETE FROM MOVIE
WHERE
  ID = UUID_TO_BIN(?);
`

export const updateMovieQ = `
UPDATE MOVIE
SET 
  TITLE = COALESCE(?, TITLE),
  YEAR = COALESCE(?, YEAR),
  DIRECTOR = COALESCE(?, DIRECTOR),
  DURATION = COALESCE(?, DURATION),
  POSTER = COALESCE(?, POSTER),
  RATE = COALESCE(?, RATE)
WHERE ID = UUID_TO_BIN(?);
`
